name: NPM Release Reusable

on:
  workflow_call:
    inputs:
      ref:
        description: 'Ref to checkout'
        required: false
        type: string
    secrets:
      NPM_TOKEN:
        description: 'A token passed from the caller workflow'
        required: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged
    outputs:
      bump: ${{ steps.prerelease.outputs.prerelease }}${{ steps.patch.outputs.bump }}${{ steps.minor.outputs.bump }}${{ steps.major.outputs.bump }}
    steps:
      - name: Is patch
        id: patch
        if: contains( github.event.pull_request.labels.*.name, 'npm:patch')
        run: echo "::set-output name=bump::patch"
      - name: Is minor
        id: minor
        if: contains( github.event.pull_request.labels.*.name, 'npm:minor')
        run: echo "::set-output name=bump::minor"
      - name: Is major
        id: major
        if: contains( github.event.pull_request.labels.*.name, 'npm:major')
        run: echo "::set-output name=bump::major"
      - name: Is pre release
        id: prerelease
        if: contains( github.event.pull_request.base.ref, 'develop' )
        run: echo "::set-output name=prerelease::pre"
  build_deploy:
    runs-on: ubuntu-latest
    needs: [prepare]
    if: ${{ needs.prepare.outputs.bump != 'pre' }}
    strategy:
      fail-fast: false
      matrix:
        package: [contracts, contracts-ethers]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ inputs.ref }}
      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: yarn install --pure-lockfile
        working-directory: packages/${{ matrix.package }}
      - name: Version bump main
        working-directory: packages/${{ matrix.package }}
        run: |
          yarn config set version-git-tag false
          # run the bump twice to remove -alpha first
          yarn version --${{ needs.prepare.outputs.bump }}
          yarn version --${{ needs.prepare.outputs.bump }}
      - name: Version add alpha for develop
        working-directory: packages/${{ matrix.package }}
        run: |
          VERSION=$(cat package.json | jq -r .version)
          yarn version --new-version "$VERSION-alpha" --no-git-tag-version
      - name: publish
        run: yarn publish
        working-directory: packages/${{ matrix.package }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.package}}
          path: ./packages/${{ matrix.package }}/
          retention-days: 1
  pushChanges:
    runs-on: ubuntu-latest
    needs: [build_deploy]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ inputs.ref }}
          token: ${{ secrets.ARABOT_PAT }}
      - uses: actions/download-artifact@v3
        with:
          path: packages/contracts/
          name: contracts
      - uses: actions/download-artifact@v3
        with:
          path: packages/contracts-ethers/
          name: contracts-ethers
      - name: Commit changes
        id: commit
        run: |
          git fetch
          git pull
          git config --global user.name "Arabot-1"
          git config --global user.email "arabot-1@users.noreply.github.com"
          git add packages/contracts/package.json
          git add packages/contracts-ethers/package.json
          git commit -am "Updates package.json versions"
          git push
