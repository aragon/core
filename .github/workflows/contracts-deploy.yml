name: Contracts Deploy
on:
  pull_request:
    types:
      - closed
    branches:
      - 'develop'
      - 'main'
    paths:
      - 'packages/contracts/**'

jobs:
  test:
    if: github.actor != 'arabot-1' && github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn install --pure-lockfile
      - name: Compile
        run: cd packages/contracts && yarn run build
      - name: Run Hardhat Tests
        env:
          REPORT_GAS: true
        run: cd packages/contracts && yarn run test
  prepare:
    needs: [test]
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.prepare.outputs.environment }}
      tags: ${{ steps.prepare.outputs.tags }}
      matrix: ${{ steps.prepare.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - name: Prepare
        id: prepare
        run: node .github/helpers/contracts/prepare.js '${{ github.ref }}'
  build-deploy:
    runs-on: ubuntu-latest
    needs: [prepare]
    environment: ${{ needs.prepare.outputs.environment }}
    strategy:
      fail-fast: true
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn install --pure-lockfile
      - name: Compile
        run: cd packages/contracts && yarn run build
      - name: Deploy
        run: cd packages/contracts && yarn run deploy --network $NETWORK --tags "DAOFactory,TokenFactory,${{ needs.prepare.outputs.tags }}"
        env:
          ETH_KEY: ${{ secrets.ETH_KEY }}
          NETWORK: ${{ matrix.network }}
          ETHERSCAN_KEY: ${{ secrets.ETHERSCAN_KEY }}
          ARBISCAN_KEY: ${{ secrets.ARBISCAN_KEY }}
          POLYGONSCAN_KEY: ${{ secrets.POLYGONSCAN_KEY }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.network}}
          path: ./packages/contracts/deployments/*
          retention-days: 1
  conclude:
    runs-on: ubuntu-latest
    needs: ['build-deploy']
    outputs:
      commit: ${{ steps.commit.outputs.commit }}
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.ARABOT_PAT }}
      - uses: actions/download-artifact@v3
        with:
          path: artefacts
      - name: Update Releases.md
        run: node .github/helpers/contracts/updateReleasesMD.js
      - name: Update active_contracts.json
        run: node .github/helpers/contracts/updateActiveContractsJSON.js
      - name: Update Subgraph manifests
        run: node .github/helpers/subgraph/updateManifest.js
      - name: Commit changes
        id: commit
        run: |
          git fetch
          git pull
          git config --global user.name "Arabot-1"
          git config --global user.email "arabot-1@users.noreply.github.com"
          git add active_contracts.json
          git add packages/contracts/Releases.md
          git add ./packages/subgraph/	
          git commit -am "Updates files with deployed contract addresses"
          git push
          echo "::set-output name=commit::$(git rev-parse HEAD)"
  npm-release:
    runs-on: ubuntu-latest
    needs: ['conclude']
    steps:
      - uses: './github/workflows/npm-release.yml'
        with:
          ref: ${{ needs.conclude.outputs.commit }}
